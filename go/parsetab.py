
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APPEND ARRAY BOOL BYTE CAP CASE COLON COMA COMMENT CONST COPY DECREASE DEFAULT DELETE DEQUAL DIVIDE ELSE EQUAL EQUAL_COMPARE FALSE FLOAT FLOAT32 FLOAT64 FOR FUNC GREATER GREATER_OR_EQUAL ID IF INCREASE INT32 INT64 INTEGER INTERFACE JOIN LCORCHE LEN LLLAVE LPAREN MAIN MAKE MAP MINUS MOD MULTI_COMMENT NOT NOT_EQUAL OR PACKAGE PLUS POINTER POINTS PRINT RCORCHE RETURN RLLAVE RPAREN SCAN SMALLER SMALLER_OR_EQUAL STRING STRUCT SWITCH TIMES TRUE TYPE VAR WFLOAT WINT WSTRINGcodigo : rule \n              | more_rulesmore_rules : rule codigorule : impresion COLON\n              | impresion\n\n              | scan_func COLON\n              | scan_func\n\n              | expression COLON\n              | expression\n\n              | cicloFor\n\n              | comparison\n\n              | logic_operation\n\n              | decVar COLON\n              | decVar\n\n              | var_asignation\n              | var_asignation COLON\n\n              | funciones\n              | funciones COLON\n\n              | SenIF\n              | SenElseIF\n              | SenElse\n\n              | SenStruct\n              | cStruct\n\n              | switch_statement\n\n              | array_declaration COLON\n              | array_declaration\n              | array_var COLON\n              | array_var\n              | array_assignment COLON\n              | array_assignment\n\n              | slice_declaration COLON\n              | slice_declaration\n              | slice_var COLON\n              | slice_var\n              | slice_assignment COLON\n              | slice_assignment\n              \n              | map_declaration COLON\n              | map_declaration\n              | map_assignment COLON\n              | map_assignment\n              \n              | func_declaration\n              \n              | main_funcvalues : STRING\n              | INTEGER\n              | FLOAT\n              | TRUE\n              | FALSEdata_types : INT32\n            | INT64\n            | FLOAT32\n            | FLOAT64\n            | BYTE\n            | WINT\n            | WFLOAT\n            | WSTRING\n            | BOOLoperations : expression \n                  | comparison \n                  | logic_operationdata_structure : array_var\n                      | map_varvar_asignation : ID EQUAL any\n                any : values\n                      | operations\n                      | ID\n                      | data_structure\n                      | funcionesarr_content :  LLLAVE items COMA more_items RLLAVE\n                | LLLAVE items RLLAVE\n                \n        more_items : items COMA more_items\n                   | items\n                   \n             items : values\n                   | operationssomething : ID \n                 | data_structure\n                 | values\n                 | operationsmain_func : FUNC MAIN LPAREN RPAREN LLLAVE codigo RLLAVEscan_func : SCAN LPAREN POINTER RPARENcicloFor : FOR LLLAVE codigo RLLAVE\n                | FOR comparison LLLAVE codigo RLLAVE\n                | FOR logic_operation LLLAVE codigo RLLAVE\n                | FOR decVarOne COLON comparison COLON incre LLLAVE codigo RLLAVE\n       incre    : ID INCREASE\n                | ID DECREASEdecVar : decVarOne\n              | VAR ID EQUAL INTEGER\n              | VAR ID EQUAL ID\n              | VAR ID EQUAL FLOAT\n              | VAR ID EQUAL expression\n              | VAR ID EQUAL logic_operation\n              | VAR ID EQUAL comparison\n              | VAR ID EQUAL STRING\n              | ID DEQUAL STRING\n              | ID DEQUAL FLOAT\n              | ID DEQUAL expression\n              | ID DEQUAL logic_operation\n              | ID DEQUAL comparisonslice_declaration : VAR ID LCORCHE RCORCHE data_types\n                         | VAR ID EQUAL LCORCHE RCORCHE data_types arr_content\n                         | VAR ID EQUAL funM\n                         | ID DEQUAL funM\n                         | ID DEQUAL LCORCHE RCORCHE data_types arr_content\n\n\n                    funM : MAKE LPAREN LCORCHE RCORCHE data_types COMA cap RPAREN\n                         | MAKE LPAREN LCORCHE RCORCHE data_types COMA cap COMA cap RPAREN\n                         \n                     cap : INTEGER\n                         | ID\n                         | expressionslice_var : ID LCORCHE index_s RCORCHE\n         \n         index_s : ID\n                 | INTEGER\n                 | expressionslice_assignment : slice_var EQUAL something_s\n    \n              something_s : ID \n                        | array_var\n                        | values\n                        | operationsfunciones : APPEND LPAREN ID COMA values RPAREN\n                 | APPEND LPAREN ID COMA ID RPAREN\n                 | LEN LPAREN ID RPAREN\n                 | COPY LPAREN ID COMA ID RPAREN\n                 | DELETE LPAREN ID COMA ID RPARENdecVarOne : ID DEQUAL ID\n                 | ID DEQUAL INTEGERSenIF : IF comparison LLLAVE codigo RLLAVE\n             | IF TRUE LLLAVE codigo RLLAVE\n             | IF FALSE LLLAVE codigo RLLAVESenElseIF : ELSE IF comparison LLLAVE codigo RLLAVE\n             | ELSE IF TRUE LLLAVE codigo RLLAVE\n             | ELSE IF FALSE LLLAVE codigo RLLAVESenElse : ELSE LLLAVE codigo RLLAVESenStruct : TYPE ID STRUCT LLLAVE declaration RLLAVE\n    \n       declaration : variable data_types\n                   | declaration variable data_types\n       \n       variable    : IDcStruct : ID DEQUAL ID LLLAVE asignaciones RLLAVE\n    \n       asignaciones : ID POINTS valor\n                    | ID POINTS valor COMA asignaciones\n       \n       valor : ID\n             | INTEGER\n             | TRUE\n             | FALSEcomparison : value op value\n       value      : ID\n                  | expression\n       op         : GREATER\n                  | SMALLER\n                  | GREATER_OR_EQUAL\n                  | SMALLER_OR_EQUAL\n                  | EQUAL_COMPARE\n                  | NOT_EQUALlogic_operation : logic_value logic_recu\n                       | negation\n\n       logic_recu      : logic_op logic_value\n                       | logic_op logic_value logic_recu\n        \n\n       logic_value     : negation\n                       | comparison\n                       | ID\n\n       negation        : NOT comparison\n                       | NOT ID\n                       \n       logic_op        : AND\n                       | ORswitch_statement : SWITCH ID LLLAVE cases RLLAVE\n\n                  cases : CASE values POINTS codigo \n                        | CASE values POINTS codigo more\n\n                  more : cases \n                       | DEFAULT POINTS codigoarray_declaration : VAR ID LCORCHE capacity RCORCHE data_types\n                         | VAR ID EQUAL LCORCHE capacity RCORCHE data_types arr_content\n\n       capacity : INTEGER \n                | ID\n                | expressionarray_var : ID LCORCHE index RCORCHE\n         \n           index : ID\n                 | INTEGER\n                 | expressionarray_assignment : array_var EQUAL somethingmap_declaration : VAR ID LCORCHE data_types RCORCHE data_typesmap_var : ID LCORCHE key RCORCHE\n           key : ID \n               | values\n               | operationsmap_assignment : array_var EQUAL somethingfunc_declaration : FUNC ID LPAREN params RPAREN data_types LLLAVE codigo RETURN retorno RLLAVE\n                        | FUNC ID LPAREN params RPAREN data_types LLLAVE RETURN return_value RLLAVE\n\n                return_value : retorno COLON\n                             | retorno\n                \n                retorno : ID \n                        | values\n                        | operations\n                        | data_structure\n                        \n                params : ID data_types \n                       | more_params\n                       \n                more_params : ID data_types COMA paramsimpresion : PRINT LPAREN content RPAREN\n         content : values\n                 | operations\n                 | funciones\n                 | data_structure\n                 | IDexpression : something_ex\n                  | something_ex adicionaEx\n\n       adicionaEx : op something_ex\n                  | op something_ex adicionaEx\n\n    something_ex : ID\n                 | INTEGER\n                 | FLOAT\n                 | data_structure\n                 | funciones\n\n              op : PLUS\n                 | TIMES\n                 | DIVIDE\n                 | MINUS'
    
_lr_action_items = {'PRINT':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,84,89,90,91,93,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,300,301,302,303,304,305,306,307,310,314,318,332,333,335,338,345,353,362,364,367,371,372,],[29,29,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,29,-145,-209,-60,-152,-144,29,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,29,29,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,29,29,29,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,29,29,29,-131,-81,-82,-99,-125,-126,-127,-163,29,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,29,29,-100,29,-78,-169,-69,-83,29,-68,-104,-185,-184,-105,]),'SCAN':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,84,89,90,91,93,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,300,301,302,303,304,305,306,307,310,314,318,332,333,335,338,345,353,362,364,367,371,372,],[30,30,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,30,-145,-209,-60,-152,-144,30,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,30,30,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,30,30,30,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,30,30,30,-131,-81,-82,-99,-125,-126,-127,-163,30,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,30,30,-100,30,-78,-169,-69,-83,30,-68,-104,-185,-184,-105,]),'FOR':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,84,89,90,91,93,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,300,301,302,303,304,305,306,307,310,314,318,332,333,335,338,345,353,362,364,367,371,372,],[32,32,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,32,-145,-209,-60,-152,-144,32,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,32,32,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,32,32,32,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,32,32,32,-131,-81,-82,-99,-125,-126,-127,-163,32,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,32,32,-100,32,-78,-169,-69,-83,32,-68,-104,-185,-184,-105,]),'VAR':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,84,89,90,91,93,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,300,301,302,303,304,305,306,307,310,314,318,332,333,335,338,345,353,362,364,367,371,372,],[37,37,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,37,-145,-209,-60,-152,-144,37,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,37,37,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,37,37,37,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,37,37,37,-131,-81,-82,-99,-125,-126,-127,-163,37,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,37,37,-100,37,-78,-169,-69,-83,37,-68,-104,-185,-184,-105,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,36,37,38,39,40,45,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,108,109,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,194,196,197,198,199,208,209,210,211,212,213,214,215,216,217,224,225,226,227,228,229,230,231,232,233,236,237,238,239,240,241,242,246,247,248,249,250,257,258,259,263,275,276,277,282,284,288,293,294,295,296,297,298,300,301,302,303,304,305,306,307,309,310,311,314,318,329,332,333,335,336,337,338,339,344,345,353,354,361,362,363,364,367,371,372,],[38,38,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,88,-86,-153,97,-205,-206,-207,108,111,112,113,-208,116,-61,-4,-6,-8,-13,-16,-18,-25,-27,118,-29,-31,-33,131,-35,-37,-39,140,-202,143,-146,-147,-148,-149,-150,-151,-210,-211,-212,-213,38,-145,-209,-60,108,-152,154,-161,-162,157,167,173,181,182,183,184,-144,108,38,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,38,38,108,203,205,-143,-154,-156,-157,-158,209,218,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,38,38,38,253,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,218,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,265,-173,-109,-179,269,-120,273,274,38,38,38,-131,281,-81,-82,290,-99,-125,-126,-127,281,-163,38,-168,-178,319,-136,-103,327,-119,-118,-121,-122,-128,-129,-130,-132,-133,38,253,38,-100,-134,38,-78,-169,265,327,-69,351,355,-83,38,355,327,-68,351,-104,-185,-184,-105,]),'APPEND':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,36,38,39,40,45,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,98,99,100,108,109,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,216,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,298,300,301,302,303,304,305,306,307,310,314,318,332,333,335,337,338,339,344,345,353,354,361,362,363,364,367,371,372,],[41,41,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,41,-86,-153,-205,-206,-207,41,-208,41,-61,-4,-6,-8,-13,-16,-18,-25,-27,41,-29,-31,-33,41,-35,-37,-39,41,-202,41,-146,-147,-148,-149,-150,-151,-210,-211,-212,-213,41,-145,-209,-60,41,-152,41,-161,-162,41,41,41,-144,41,41,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,41,41,41,41,-143,-154,-156,-157,-158,41,41,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,41,41,41,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,41,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,41,41,41,-131,-81,-82,-99,-125,-126,-127,-163,41,-168,-178,-136,-103,41,-119,-118,-121,-122,-128,-129,-130,-132,41,41,-100,41,-78,-169,41,-69,41,41,-83,41,41,41,-68,41,-104,-185,-184,-105,]),'LEN':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,36,38,39,40,45,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,98,99,100,108,109,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,216,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,298,300,301,302,303,304,305,306,307,310,314,318,332,333,335,337,338,339,344,345,353,354,361,362,363,364,367,371,372,],[42,42,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,42,-86,-153,-205,-206,-207,42,-208,42,-61,-4,-6,-8,-13,-16,-18,-25,-27,42,-29,-31,-33,42,-35,-37,-39,42,-202,42,-146,-147,-148,-149,-150,-151,-210,-211,-212,-213,42,-145,-209,-60,42,-152,42,-161,-162,42,42,42,-144,42,42,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,42,42,42,42,-143,-154,-156,-157,-158,42,42,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,42,42,42,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,42,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,42,42,42,-131,-81,-82,-99,-125,-126,-127,-163,42,-168,-178,-136,-103,42,-119,-118,-121,-122,-128,-129,-130,-132,42,42,-100,42,-78,-169,42,-69,42,42,-83,42,42,42,-68,42,-104,-185,-184,-105,]),'COPY':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,36,38,39,40,45,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,98,99,100,108,109,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,216,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,298,300,301,302,303,304,305,306,307,310,314,318,332,333,335,337,338,339,344,345,353,354,361,362,363,364,367,371,372,],[43,43,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,43,-86,-153,-205,-206,-207,43,-208,43,-61,-4,-6,-8,-13,-16,-18,-25,-27,43,-29,-31,-33,43,-35,-37,-39,43,-202,43,-146,-147,-148,-149,-150,-151,-210,-211,-212,-213,43,-145,-209,-60,43,-152,43,-161,-162,43,43,43,-144,43,43,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,43,43,43,43,-143,-154,-156,-157,-158,43,43,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,43,43,43,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,43,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,43,43,43,-131,-81,-82,-99,-125,-126,-127,-163,43,-168,-178,-136,-103,43,-119,-118,-121,-122,-128,-129,-130,-132,43,43,-100,43,-78,-169,43,-69,43,43,-83,43,43,43,-68,43,-104,-185,-184,-105,]),'DELETE':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,36,38,39,40,45,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,98,99,100,108,109,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,216,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,298,300,301,302,303,304,305,306,307,310,314,318,332,333,335,337,338,339,344,345,353,354,361,362,363,364,367,371,372,],[44,44,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,44,-86,-153,-205,-206,-207,44,-208,44,-61,-4,-6,-8,-13,-16,-18,-25,-27,44,-29,-31,-33,44,-35,-37,-39,44,-202,44,-146,-147,-148,-149,-150,-151,-210,-211,-212,-213,44,-145,-209,-60,44,-152,44,-161,-162,44,44,44,-144,44,44,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,44,44,44,44,-143,-154,-156,-157,-158,44,44,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,44,44,44,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,44,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,44,44,44,-131,-81,-82,-99,-125,-126,-127,-163,44,-168,-178,-136,-103,44,-119,-118,-121,-122,-128,-129,-130,-132,44,44,-100,44,-78,-169,44,-69,44,44,-83,44,44,44,-68,44,-104,-185,-184,-105,]),'IF':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,46,50,52,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,84,89,90,91,93,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,300,301,302,303,304,305,306,307,310,314,318,332,333,335,338,345,353,362,364,367,371,372,],[45,45,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,109,-208,-61,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,45,-145,-209,-60,-152,-144,45,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,45,45,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,45,45,45,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,45,45,45,-131,-81,-82,-99,-125,-126,-127,-163,45,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,45,45,-100,45,-78,-169,-69,-83,45,-68,-104,-185,-184,-105,]),'ELSE':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,84,89,90,91,93,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,300,301,302,303,304,305,306,307,310,314,318,332,333,335,338,345,353,362,364,367,371,372,],[46,46,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,46,-145,-209,-60,-152,-144,46,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,46,46,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,46,46,46,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,46,46,46,-131,-81,-82,-99,-125,-126,-127,-163,46,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,46,46,-100,46,-78,-169,-69,-83,46,-68,-104,-185,-184,-105,]),'TYPE':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,84,89,90,91,93,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,300,301,302,303,304,305,306,307,310,314,318,332,333,335,338,345,353,362,364,367,371,372,],[47,47,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,47,-145,-209,-60,-152,-144,47,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,47,47,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,47,47,47,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,47,47,47,-131,-81,-82,-99,-125,-126,-127,-163,47,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,47,47,-100,47,-78,-169,-69,-83,47,-68,-104,-185,-184,-105,]),'SWITCH':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,84,89,90,91,93,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,300,301,302,303,304,305,306,307,310,314,318,332,333,335,338,345,353,362,364,367,371,372,],[48,48,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,48,-145,-209,-60,-152,-144,48,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,48,48,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,48,48,48,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,48,48,48,-131,-81,-82,-99,-125,-126,-127,-163,48,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,48,48,-100,48,-78,-169,-69,-83,48,-68,-104,-185,-184,-105,]),'FUNC':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,84,89,90,91,93,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,300,301,302,303,304,305,306,307,310,314,318,332,333,335,338,345,353,362,364,367,371,372,],[49,49,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,49,-145,-209,-60,-152,-144,49,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,49,49,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,49,49,49,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,49,49,49,-131,-81,-82,-99,-125,-126,-127,-163,49,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,49,49,-100,49,-78,-169,-69,-83,49,-68,-104,-185,-184,-105,]),'INTEGER':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,36,38,39,40,45,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,98,99,100,108,109,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,216,217,224,225,226,227,228,229,230,231,232,236,237,238,239,240,246,247,248,249,252,257,258,263,275,276,277,284,288,293,294,295,296,297,298,300,301,302,303,304,305,306,307,310,314,318,332,333,335,337,338,339,344,345,353,354,361,362,363,364,367,371,372,],[39,39,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,39,-86,-153,-205,-206,-207,39,-208,39,-61,-4,-6,-8,-13,-16,-18,-25,-27,123,-29,-31,-33,123,-35,-37,-39,123,-202,39,-146,-147,-148,-149,-150,-151,-210,-211,-212,-213,39,-145,-209,-60,39,-152,39,-161,-162,165,123,177,-144,39,39,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,39,39,39,204,206,-143,-154,-156,-157,-158,210,222,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,39,39,39,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,222,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,271,-120,39,39,39,-131,271,-81,-82,-99,-125,-126,-127,-163,39,-168,-178,321,-136,-103,123,-119,-118,-121,-122,-128,-129,-130,-132,39,39,-100,39,-78,-169,123,-69,350,123,-83,39,123,123,-68,350,-104,-185,-184,-105,]),'FLOAT':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,36,38,39,40,45,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,98,99,100,108,109,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,216,217,224,225,226,227,228,229,230,231,232,236,237,238,239,240,246,247,248,249,252,257,258,263,275,276,277,284,288,293,294,296,297,298,300,301,302,303,304,305,306,307,310,314,318,332,333,335,337,338,339,344,345,353,354,361,362,363,364,367,371,372,],[40,40,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,40,-86,-153,-205,-206,-207,40,-208,40,-61,-4,-6,-8,-13,-16,-18,-25,-27,124,-29,-31,-33,124,-35,-37,-39,124,-202,40,-146,-147,-148,-149,-150,-151,-210,-211,-212,-213,40,-145,-209,-60,40,-152,40,-161,-162,159,124,124,-144,40,40,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,40,40,40,124,-143,-154,-156,-157,-158,211,40,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,40,40,40,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,40,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,272,-120,40,40,40,-131,272,-81,-82,-99,-125,-126,-127,-163,40,-168,-178,-136,-103,124,-119,-118,-121,-122,-128,-129,-130,-132,40,40,-100,40,-78,-169,124,-69,40,124,-83,40,124,124,-68,40,-104,-185,-184,-105,]),'NOT':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,36,38,39,40,50,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,84,89,90,91,93,94,95,96,98,99,100,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,145,146,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,167,168,169,170,171,172,185,186,187,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,246,247,248,249,257,258,263,275,276,277,284,288,293,294,296,297,298,300,301,302,303,304,305,306,307,310,314,318,332,333,335,337,338,344,345,353,354,361,362,364,367,371,372,],[51,51,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,51,-86,-153,-205,-206,-207,-208,-61,-4,-6,-8,-13,-16,-18,-25,-27,51,-29,-31,-33,51,-35,-37,-39,51,-202,51,-145,-209,-60,-152,51,-161,-162,51,51,51,-144,51,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,51,51,51,-143,-154,-156,-157,-158,51,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,51,51,51,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,51,51,51,-131,-81,-82,-99,-125,-126,-127,-163,51,-168,-178,-136,-103,51,-119,-118,-121,-122,-128,-129,-130,-132,51,51,-100,51,-78,-169,51,-69,51,-83,51,51,51,-68,-104,-185,-184,-105,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,89,90,91,93,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,249,257,258,263,275,276,277,284,293,294,296,297,300,301,302,303,304,305,306,307,318,333,335,338,345,362,364,367,371,372,],[0,-1,-2,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-3,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,-145,-209,-60,-152,-144,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,-131,-81,-82,-99,-125,-126,-127,-163,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,-100,-78,-169,-69,-83,-68,-104,-185,-184,-105,]),'RLLAVE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,89,90,91,93,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,144,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,191,196,197,198,199,200,201,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,243,244,245,249,251,257,258,263,266,275,276,277,278,279,280,282,284,293,294,296,297,300,301,302,303,304,305,306,307,309,313,318,319,320,321,322,323,324,325,326,327,329,330,333,334,335,338,340,341,345,346,347,348,355,356,357,358,359,360,362,364,365,366,367,368,369,371,372,],[-1,-2,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-3,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,-145,-209,-60,-152,-144,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,199,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,249,-195,-79,-204,-80,257,258,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,275,276,277,-131,284,-81,-82,-99,296,-125,-126,-127,304,305,306,307,-163,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,-133,333,-100,-139,-137,-140,-141,-142,338,-72,-73,-205,-134,-164,-78,345,-169,-69,-165,-166,-83,-138,-71,362,-188,367,-187,-189,-190,-191,-68,-104,-167,371,-185,-186,-70,-184,-105,]),'DEFAULT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,89,90,91,93,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,249,257,258,263,275,276,277,284,293,294,296,297,300,301,302,303,304,305,306,307,318,330,333,335,338,345,362,364,367,371,372,],[-1,-2,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-3,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,-145,-209,-60,-152,-144,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,-131,-81,-82,-99,-125,-126,-127,-163,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,-100,342,-78,-169,-69,-83,-68,-104,-185,-184,-105,]),'CASE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,89,90,91,93,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,193,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,249,257,258,263,275,276,277,284,293,294,296,297,300,301,302,303,304,305,306,307,318,330,333,335,338,345,362,364,367,371,372,],[-1,-2,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-3,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,-145,-209,-60,-152,-144,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,252,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,-131,-81,-82,-99,-125,-126,-127,-163,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,-100,252,-78,-169,-69,-83,-68,-104,-185,-184,-105,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,36,38,39,40,50,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,72,89,90,91,93,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,196,197,198,199,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,249,257,258,263,275,276,277,284,293,294,296,297,300,301,302,303,304,305,306,307,318,332,333,335,338,343,345,362,364,367,371,372,],[-1,-2,-5,-7,-9,-10,-11,-12,-14,-15,-17,-19,-20,-21,-22,-23,-24,-26,-28,-30,-32,-34,-36,-38,-40,-41,-42,-201,-86,-153,-205,-206,-207,-208,-61,-3,-4,-6,-8,-13,-16,-18,-25,-27,-29,-31,-33,-35,-37,-39,-202,-145,-209,-60,-152,-144,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,-195,-79,-204,-80,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,-131,-81,-82,-99,-125,-126,-127,-163,-168,-178,-136,-103,-119,-118,-121,-122,-128,-129,-130,-132,-100,344,-78,-169,-69,354,-83,-68,-104,-185,-184,-105,]),'COLON':([4,5,6,10,11,12,19,20,21,22,23,24,25,26,31,33,36,38,39,40,50,52,72,87,89,90,91,93,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,150,151,152,153,154,157,158,159,160,161,162,163,165,167,168,169,170,171,172,196,197,198,202,203,204,208,209,210,211,212,213,214,215,217,224,225,226,227,228,229,230,231,232,236,237,238,240,263,293,294,297,300,301,302,303,318,335,338,355,357,358,359,360,362,364,372,],[54,55,56,57,58,59,60,61,63,64,65,67,68,69,-201,-86,-153,-205,-206,-207,-208,-61,-202,147,-145,-209,-60,-152,-144,-159,-160,-177,-74,-75,-76,-77,-43,-44,-45,-46,-47,-57,-58,-59,-113,-114,-60,-116,-117,-203,-205,-143,-154,-156,-157,-158,-123,-94,-95,-96,-97,-98,-102,-124,-65,-62,-63,-64,-66,-67,-195,-79,-204,259,-123,-124,-155,-88,-87,-89,-90,-91,-92,-93,-101,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-109,-179,-120,-99,-168,-178,-103,-119,-118,-121,-122,-100,-169,-69,-188,368,-189,-190,-191,-68,-104,-105,]),'GREATER':([6,12,20,31,34,38,39,40,50,52,72,88,89,90,91,108,116,118,119,123,124,127,131,132,138,139,140,142,143,154,157,159,160,165,167,171,172,173,177,178,198,205,206,207,209,210,211,212,218,222,236,238,240,300,301,302,303,327,350,351,355,360,],[-145,-209,-60,74,74,-144,-206,-207,-208,-61,-202,-144,-145,-209,-60,-144,-144,-144,-208,-206,-207,-145,-144,-60,-209,-208,-144,74,-205,-144,-144,-207,-145,-206,-144,-208,-209,-144,-206,-145,-204,-144,-206,-145,-144,-206,-207,-145,-205,-206,-173,-179,-120,-119,-118,-121,-122,-144,-206,-205,-144,-208,]),'SMALLER':([6,12,20,31,34,38,39,40,50,52,72,88,89,90,91,108,116,118,119,123,124,127,131,132,138,139,140,142,143,154,157,159,160,165,167,171,172,173,177,178,198,205,206,207,209,210,211,212,218,222,236,238,240,300,301,302,303,327,350,351,355,360,],[-145,-209,-60,75,75,-144,-206,-207,-208,-61,-202,-144,-145,-209,-60,-144,-144,-144,-208,-206,-207,-145,-144,-60,-209,-208,-144,75,-205,-144,-144,-207,-145,-206,-144,-208,-209,-144,-206,-145,-204,-144,-206,-145,-144,-206,-207,-145,-205,-206,-173,-179,-120,-119,-118,-121,-122,-144,-206,-205,-144,-208,]),'GREATER_OR_EQUAL':([6,12,20,31,34,38,39,40,50,52,72,88,89,90,91,108,116,118,119,123,124,127,131,132,138,139,140,142,143,154,157,159,160,165,167,171,172,173,177,178,198,205,206,207,209,210,211,212,218,222,236,238,240,300,301,302,303,327,350,351,355,360,],[-145,-209,-60,76,76,-144,-206,-207,-208,-61,-202,-144,-145,-209,-60,-144,-144,-144,-208,-206,-207,-145,-144,-60,-209,-208,-144,76,-205,-144,-144,-207,-145,-206,-144,-208,-209,-144,-206,-145,-204,-144,-206,-145,-144,-206,-207,-145,-205,-206,-173,-179,-120,-119,-118,-121,-122,-144,-206,-205,-144,-208,]),'SMALLER_OR_EQUAL':([6,12,20,31,34,38,39,40,50,52,72,88,89,90,91,108,116,118,119,123,124,127,131,132,138,139,140,142,143,154,157,159,160,165,167,171,172,173,177,178,198,205,206,207,209,210,211,212,218,222,236,238,240,300,301,302,303,327,350,351,355,360,],[-145,-209,-60,77,77,-144,-206,-207,-208,-61,-202,-144,-145,-209,-60,-144,-144,-144,-208,-206,-207,-145,-144,-60,-209,-208,-144,77,-205,-144,-144,-207,-145,-206,-144,-208,-209,-144,-206,-145,-204,-144,-206,-145,-144,-206,-207,-145,-205,-206,-173,-179,-120,-119,-118,-121,-122,-144,-206,-205,-144,-208,]),'EQUAL_COMPARE':([6,12,20,31,34,38,39,40,50,52,72,88,89,90,91,108,116,118,119,123,124,127,131,132,138,139,140,142,143,154,157,159,160,165,167,171,172,173,177,178,198,205,206,207,209,210,211,212,218,222,236,238,240,300,301,302,303,327,350,351,355,360,],[-145,-209,-60,78,78,-144,-206,-207,-208,-61,-202,-144,-145,-209,-60,-144,-144,-144,-208,-206,-207,-145,-144,-60,-209,-208,-144,78,-205,-144,-144,-207,-145,-206,-144,-208,-209,-144,-206,-145,-204,-144,-206,-145,-144,-206,-207,-145,-205,-206,-173,-179,-120,-119,-118,-121,-122,-144,-206,-205,-144,-208,]),'NOT_EQUAL':([6,12,20,31,34,38,39,40,50,52,72,88,89,90,91,108,116,118,119,123,124,127,131,132,138,139,140,142,143,154,157,159,160,165,167,171,172,173,177,178,198,205,206,207,209,210,211,212,218,222,236,238,240,300,301,302,303,327,350,351,355,360,],[-145,-209,-60,79,79,-144,-206,-207,-208,-61,-202,-144,-145,-209,-60,-144,-144,-144,-208,-206,-207,-145,-144,-60,-209,-208,-144,79,-205,-144,-144,-207,-145,-206,-144,-208,-209,-144,-206,-145,-204,-144,-206,-145,-144,-206,-207,-145,-205,-206,-173,-179,-120,-119,-118,-121,-122,-144,-206,-205,-144,-208,]),'PLUS':([6,12,20,31,34,38,39,40,50,52,72,88,89,90,91,108,116,118,119,123,124,127,131,132,138,139,140,142,143,154,157,159,160,165,167,171,172,173,177,178,198,205,206,207,209,210,211,212,218,222,236,238,240,300,301,302,303,327,350,351,355,360,],[-145,-209,-60,80,80,-144,-206,-207,-208,-61,-202,-144,-145,-209,-60,-144,-144,-144,-208,-206,-207,-145,-144,-60,-209,-208,-144,80,-205,-144,-144,-207,-145,-206,-144,-208,-209,-144,-206,-145,-204,-144,-206,-145,-144,-206,-207,-145,-205,-206,-173,-179,-120,-119,-118,-121,-122,-144,-206,-205,-144,-208,]),'TIMES':([6,12,20,31,34,38,39,40,50,52,72,88,89,90,91,108,116,118,119,123,124,127,131,132,138,139,140,142,143,154,157,159,160,165,167,171,172,173,177,178,198,205,206,207,209,210,211,212,218,222,236,238,240,300,301,302,303,327,350,351,355,360,],[-145,-209,-60,81,81,-144,-206,-207,-208,-61,-202,-144,-145,-209,-60,-144,-144,-144,-208,-206,-207,-145,-144,-60,-209,-208,-144,81,-205,-144,-144,-207,-145,-206,-144,-208,-209,-144,-206,-145,-204,-144,-206,-145,-144,-206,-207,-145,-205,-206,-173,-179,-120,-119,-118,-121,-122,-144,-206,-205,-144,-208,]),'DIVIDE':([6,12,20,31,34,38,39,40,50,52,72,88,89,90,91,108,116,118,119,123,124,127,131,132,138,139,140,142,143,154,157,159,160,165,167,171,172,173,177,178,198,205,206,207,209,210,211,212,218,222,236,238,240,300,301,302,303,327,350,351,355,360,],[-145,-209,-60,82,82,-144,-206,-207,-208,-61,-202,-144,-145,-209,-60,-144,-144,-144,-208,-206,-207,-145,-144,-60,-209,-208,-144,82,-205,-144,-144,-207,-145,-206,-144,-208,-209,-144,-206,-145,-204,-144,-206,-145,-144,-206,-207,-145,-205,-206,-173,-179,-120,-119,-118,-121,-122,-144,-206,-205,-144,-208,]),'MINUS':([6,12,20,31,34,38,39,40,50,52,72,88,89,90,91,108,116,118,119,123,124,127,131,132,138,139,140,142,143,154,157,159,160,165,167,171,172,173,177,178,198,205,206,207,209,210,211,212,218,222,236,238,240,300,301,302,303,327,350,351,355,360,],[-145,-209,-60,83,83,-144,-206,-207,-208,-61,-202,-144,-145,-209,-60,-144,-144,-144,-208,-206,-207,-145,-144,-60,-209,-208,-144,83,-205,-144,-144,-207,-145,-206,-144,-208,-209,-144,-206,-145,-204,-144,-206,-145,-144,-206,-207,-145,-205,-206,-173,-179,-120,-119,-118,-121,-122,-144,-206,-205,-144,-208,]),'AND':([8,31,35,36,38,39,40,50,52,72,85,88,89,90,91,108,115,116,118,128,131,140,142,143,150,151,152,153,154,157,162,167,173,198,205,209,214,236,238,240,300,301,302,303,327,355,],[-157,-201,95,-156,-158,-206,-207,-208,-61,-202,-157,-158,-145,-209,-60,-144,-159,-160,-158,-157,-158,-158,-203,-205,-143,95,-156,-157,-158,-158,-157,-158,-158,-204,-158,-158,-157,-173,-179,-120,-119,-118,-121,-122,-158,-158,]),'OR':([8,31,35,36,38,39,40,50,52,72,85,88,89,90,91,108,115,116,118,128,131,140,142,143,150,151,152,153,154,157,162,167,173,198,205,209,214,236,238,240,300,301,302,303,327,355,],[-157,-201,96,-156,-158,-206,-207,-208,-61,-202,-157,-158,-145,-209,-60,-144,-159,-160,-158,-157,-158,-158,-203,-205,-143,96,-156,-157,-158,-158,-157,-158,-158,-204,-158,-158,-157,-173,-179,-120,-119,-118,-121,-122,-158,-158,]),'EQUAL':([20,23,38,97,236,237,],[62,66,99,155,-173,-109,]),'LPAREN':([29,30,41,42,43,44,113,114,166,],[70,71,101,102,103,104,194,195,235,]),'RPAREN':([31,36,39,40,50,52,72,89,90,91,93,108,115,116,122,123,124,125,126,127,128,129,135,136,137,138,139,140,141,142,143,150,151,152,153,154,182,195,198,208,224,225,226,227,228,229,230,231,232,236,238,240,254,255,269,270,271,272,273,274,286,300,301,302,303,331,349,350,351,352,370,],[-201,-153,-206,-207,-208,-61,-202,-145,-209,-60,-152,-144,-159,-160,-43,-44,-45,-46,-47,-57,-58,-59,196,-196,-197,-198,-199,-200,197,-203,-205,-143,-154,-156,-157,-158,240,256,-204,-155,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-179,-120,287,-193,300,301,-44,-45,302,303,-192,-119,-118,-121,-122,-194,364,-106,-107,-108,372,]),'LLLAVE':([31,32,36,39,40,46,50,52,72,85,86,89,90,91,93,105,106,107,108,112,115,116,142,143,150,151,152,153,154,157,188,189,190,192,198,208,224,225,226,227,228,229,230,231,232,236,238,240,256,267,289,292,300,301,302,303,312,315,316,317,],[-201,84,-153,-206,-207,110,-208,-61,-202,145,146,-145,-209,-60,-152,185,186,187,-144,193,-159,-160,-203,-205,-143,-154,-156,-157,-158,233,246,247,248,250,-204,-155,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-179,-120,288,298,314,298,-119,-118,-121,-122,332,-84,-85,298,]),'RCORCHE':([31,36,39,40,50,52,72,89,90,91,93,108,115,116,122,124,125,126,128,129,142,143,150,151,152,153,154,156,164,173,174,175,176,177,178,179,180,198,205,206,207,208,216,218,219,221,222,223,224,225,226,227,228,229,230,231,232,236,238,240,260,268,300,301,302,303,],[-201,-153,-206,-207,-208,-61,-202,-145,-209,-60,-152,-144,-159,-160,-43,-45,-46,-47,-58,-59,-203,-205,-143,-154,-156,-157,-158,220,234,-110,236,237,238,-44,-57,-181,-182,-204,-174,-44,-57,-155,261,-171,262,264,-170,-172,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-179,-120,291,299,-119,-118,-121,-122,]),'COMA':([31,36,39,40,50,52,72,89,90,91,93,108,115,116,122,123,124,125,126,127,128,129,142,143,150,151,152,153,154,181,183,184,198,208,224,225,226,227,228,229,230,231,232,236,238,240,286,300,301,302,303,319,320,321,322,323,324,325,326,327,328,347,349,350,351,352,],[-201,-153,-206,-207,-208,-61,-202,-145,-209,-60,-152,-144,-159,-160,-43,-44,-45,-46,-47,-57,-58,-59,-203,-205,-143,-154,-156,-157,-158,239,241,242,-204,-155,-48,-49,-50,-51,-52,-53,-54,-55,-56,-173,-179,-120,311,-119,-118,-121,-122,-139,336,-140,-141,-142,337,-72,-73,-205,339,361,363,-106,-107,-108,]),'DEQUAL':([38,88,],[98,148,]),'LCORCHE':([38,88,97,98,108,116,118,131,140,143,154,155,157,167,173,205,209,218,235,327,351,355,],[100,149,156,164,149,149,149,149,149,149,149,216,149,149,149,149,149,149,268,149,149,149,]),'TRUE':([45,62,66,70,99,100,109,149,239,252,295,298,337,344,354,361,],[106,125,125,125,125,125,189,125,125,125,322,125,125,125,125,125,]),'FALSE':([45,62,66,70,99,100,109,149,239,252,295,298,337,344,354,361,],[107,126,126,126,126,126,190,126,126,126,323,126,126,126,126,126,]),'MAIN':([49,],[114,]),'STRING':([62,66,70,98,99,100,149,155,239,252,298,337,344,354,361,],[122,122,122,158,122,122,122,215,122,122,122,122,122,122,122,]),'POINTER':([71,],[141,]),'MAKE':([98,155,],[166,166,]),'STRUCT':([111,],[192,]),'POINTS':([122,125,126,265,271,272,285,342,],[-43,-46,-47,295,-44,-45,310,353,]),'INT32':([156,220,234,253,261,262,264,281,283,287,291,299,308,],[224,224,224,224,224,224,224,-135,224,224,224,224,224,]),'INT64':([156,220,234,253,261,262,264,281,283,287,291,299,308,],[225,225,225,225,225,225,225,-135,225,225,225,225,225,]),'FLOAT32':([156,220,234,253,261,262,264,281,283,287,291,299,308,],[226,226,226,226,226,226,226,-135,226,226,226,226,226,]),'FLOAT64':([156,220,234,253,261,262,264,281,283,287,291,299,308,],[227,227,227,227,227,227,227,-135,227,227,227,227,227,]),'BYTE':([156,220,234,253,261,262,264,281,283,287,291,299,308,],[228,228,228,228,228,228,228,-135,228,228,228,228,228,]),'WINT':([156,220,234,253,261,262,264,281,283,287,291,299,308,],[229,229,229,229,229,229,229,-135,229,229,229,229,229,]),'WFLOAT':([156,220,234,253,261,262,264,281,283,287,291,299,308,],[230,230,230,230,230,230,230,-135,230,230,230,230,230,]),'WSTRING':([156,220,234,253,261,262,264,281,283,287,291,299,308,],[231,231,231,231,231,231,231,-135,231,231,231,231,231,]),'BOOL':([156,220,234,253,261,262,264,281,283,287,291,299,308,],[232,232,232,232,232,232,232,-135,232,232,232,232,232,]),'INCREASE':([290,],[315,]),'DECREASE':([290,],[316,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigo':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[1,53,144,191,200,201,243,244,245,278,279,280,313,330,334,343,365,]),'rule':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'more_rules':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'impresion':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'scan_func':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expression':([0,2,32,45,51,62,66,70,84,92,94,98,99,100,109,110,145,146,147,149,155,156,185,186,187,216,246,247,248,288,298,310,314,332,337,339,344,353,354,361,363,],[6,6,89,89,89,127,127,127,6,89,89,160,127,178,89,6,6,6,89,207,212,223,6,6,6,223,6,6,6,6,127,6,6,6,127,352,127,6,127,127,352,]),'cicloFor':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'comparison':([0,2,32,45,51,62,66,70,84,94,98,99,100,109,110,145,146,147,149,155,185,186,187,246,247,248,288,298,310,314,332,337,344,353,354,361,],[8,8,85,105,115,128,128,128,8,153,162,128,128,188,8,8,8,202,128,214,8,8,8,8,8,8,8,128,8,8,8,128,128,8,128,128,]),'logic_operation':([0,2,32,62,66,70,84,98,99,100,110,145,146,149,155,185,186,187,246,247,248,288,298,310,314,332,337,344,353,354,361,],[9,9,86,129,129,129,9,161,129,129,9,9,9,129,213,9,9,9,9,9,9,9,129,9,9,9,129,129,9,129,129,]),'decVar':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'var_asignation':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'funciones':([0,2,32,45,51,62,66,70,73,84,92,94,98,99,100,109,110,145,146,147,149,155,156,185,186,187,216,246,247,248,288,298,310,314,332,337,339,344,353,354,361,363,],[12,12,90,90,90,90,90,138,90,12,90,90,90,172,90,90,12,12,12,90,90,90,90,12,12,12,90,12,12,12,12,90,12,12,12,90,90,90,12,90,90,90,]),'SenIF':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'SenElseIF':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'SenElse':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'SenStruct':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'cStruct':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'switch_statement':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'array_declaration':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'array_var':([0,2,32,45,51,62,66,70,73,84,92,94,98,99,100,109,110,145,146,147,149,155,156,185,186,187,216,246,247,248,288,298,310,314,332,337,339,344,353,354,361,363,],[20,20,91,91,91,91,132,91,91,20,91,91,91,91,91,91,20,20,20,91,91,91,91,20,20,20,91,20,20,20,20,91,20,20,20,91,91,91,20,91,91,91,]),'array_assignment':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'slice_declaration':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'slice_var':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'slice_assignment':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'map_declaration':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'map_assignment':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'func_declaration':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'main_func':([0,2,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'something_ex':([0,2,32,45,51,62,66,70,73,84,92,94,98,99,100,109,110,145,146,147,149,155,156,185,186,187,216,246,247,248,288,298,310,314,332,337,339,344,353,354,361,363,],[31,31,31,31,31,31,31,31,142,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'decVarOne':([0,2,32,84,110,145,146,185,186,187,246,247,248,288,310,314,332,353,],[33,33,87,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'value':([0,2,32,45,51,62,66,70,84,92,94,98,99,100,109,110,145,146,147,149,155,185,186,187,246,247,248,288,298,310,314,332,337,344,353,354,361,],[34,34,34,34,34,34,34,34,34,150,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'logic_value':([0,2,32,62,66,70,84,94,98,99,100,110,145,146,149,155,185,186,187,246,247,248,288,298,310,314,332,337,344,353,354,361,],[35,35,35,35,35,35,35,151,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'negation':([0,2,32,62,66,70,84,94,98,99,100,110,145,146,149,155,185,186,187,246,247,248,288,298,310,314,332,337,344,353,354,361,],[36,36,36,36,36,36,36,152,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'data_structure':([0,2,32,45,51,62,66,70,73,84,92,94,98,99,100,109,110,145,146,147,149,155,156,185,186,187,216,246,247,248,288,298,310,314,332,337,339,344,353,354,361,363,],[50,50,50,50,50,119,50,139,50,50,50,50,50,171,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,360,50,360,50,50,]),'map_var':([0,2,32,45,51,62,66,70,73,84,92,94,98,99,100,109,110,145,146,147,149,155,156,185,186,187,216,246,247,248,288,298,310,314,332,337,339,344,353,354,361,363,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'adicionaEx':([31,142,],[72,198,]),'op':([31,34,142,],[73,92,73,]),'logic_recu':([35,151,],[93,208,]),'logic_op':([35,151,],[94,94,]),'something':([62,],[117,]),'values':([62,66,70,99,100,149,239,252,298,337,344,354,361,],[120,133,136,169,179,179,270,285,325,325,358,358,325,]),'operations':([62,66,70,99,100,149,298,337,344,354,361,],[121,134,137,170,180,180,326,326,359,359,326,]),'something_s':([66,],[130,]),'content':([70,],[135,]),'funM':([98,155,],[163,217,]),'any':([99,],[168,]),'index':([100,149,],[174,174,]),'index_s':([100,],[175,]),'key':([100,149,],[176,176,]),'capacity':([156,216,],[219,260,]),'data_types':([156,220,234,253,261,262,264,283,287,291,299,308,],[221,263,267,286,292,293,294,309,312,317,328,329,]),'cases':([193,330,],[251,341,]),'params':([194,311,],[254,331,]),'more_params':([194,311,],[255,255,]),'asignaciones':([233,336,],[266,346,]),'declaration':([250,],[282,]),'variable':([250,282,],[283,308,]),'incre':([259,],[289,]),'arr_content':([267,292,317,],[297,318,335,]),'valor':([295,],[320,]),'items':([298,337,361,],[324,347,347,]),'more':([330,],[340,]),'more_items':([337,361,],[348,369,]),'cap':([339,363,],[349,370,]),'return_value':([344,],[356,]),'retorno':([344,354,],[357,366,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigo","S'",1,None,None,None),
  ('codigo -> rule','codigo',1,'p_coddigo','syntactic.py',17),
  ('codigo -> more_rules','codigo',1,'p_coddigo','syntactic.py',18),
  ('more_rules -> rule codigo','more_rules',2,'p_more_rules','syntactic.py',21),
  ('rule -> impresion COLON','rule',2,'p_rules','syntactic.py',24),
  ('rule -> impresion','rule',1,'p_rules','syntactic.py',25),
  ('rule -> scan_func COLON','rule',2,'p_rules','syntactic.py',27),
  ('rule -> scan_func','rule',1,'p_rules','syntactic.py',28),
  ('rule -> expression COLON','rule',2,'p_rules','syntactic.py',30),
  ('rule -> expression','rule',1,'p_rules','syntactic.py',31),
  ('rule -> cicloFor','rule',1,'p_rules','syntactic.py',33),
  ('rule -> comparison','rule',1,'p_rules','syntactic.py',35),
  ('rule -> logic_operation','rule',1,'p_rules','syntactic.py',37),
  ('rule -> decVar COLON','rule',2,'p_rules','syntactic.py',39),
  ('rule -> decVar','rule',1,'p_rules','syntactic.py',40),
  ('rule -> var_asignation','rule',1,'p_rules','syntactic.py',42),
  ('rule -> var_asignation COLON','rule',2,'p_rules','syntactic.py',43),
  ('rule -> funciones','rule',1,'p_rules','syntactic.py',45),
  ('rule -> funciones COLON','rule',2,'p_rules','syntactic.py',46),
  ('rule -> SenIF','rule',1,'p_rules','syntactic.py',48),
  ('rule -> SenElseIF','rule',1,'p_rules','syntactic.py',49),
  ('rule -> SenElse','rule',1,'p_rules','syntactic.py',50),
  ('rule -> SenStruct','rule',1,'p_rules','syntactic.py',52),
  ('rule -> cStruct','rule',1,'p_rules','syntactic.py',53),
  ('rule -> switch_statement','rule',1,'p_rules','syntactic.py',55),
  ('rule -> array_declaration COLON','rule',2,'p_rules','syntactic.py',57),
  ('rule -> array_declaration','rule',1,'p_rules','syntactic.py',58),
  ('rule -> array_var COLON','rule',2,'p_rules','syntactic.py',59),
  ('rule -> array_var','rule',1,'p_rules','syntactic.py',60),
  ('rule -> array_assignment COLON','rule',2,'p_rules','syntactic.py',61),
  ('rule -> array_assignment','rule',1,'p_rules','syntactic.py',62),
  ('rule -> slice_declaration COLON','rule',2,'p_rules','syntactic.py',64),
  ('rule -> slice_declaration','rule',1,'p_rules','syntactic.py',65),
  ('rule -> slice_var COLON','rule',2,'p_rules','syntactic.py',66),
  ('rule -> slice_var','rule',1,'p_rules','syntactic.py',67),
  ('rule -> slice_assignment COLON','rule',2,'p_rules','syntactic.py',68),
  ('rule -> slice_assignment','rule',1,'p_rules','syntactic.py',69),
  ('rule -> map_declaration COLON','rule',2,'p_rules','syntactic.py',71),
  ('rule -> map_declaration','rule',1,'p_rules','syntactic.py',72),
  ('rule -> map_assignment COLON','rule',2,'p_rules','syntactic.py',73),
  ('rule -> map_assignment','rule',1,'p_rules','syntactic.py',74),
  ('rule -> func_declaration','rule',1,'p_rules','syntactic.py',76),
  ('rule -> main_func','rule',1,'p_rules','syntactic.py',78),
  ('values -> STRING','values',1,'p_values','syntactic.py',81),
  ('values -> INTEGER','values',1,'p_values','syntactic.py',82),
  ('values -> FLOAT','values',1,'p_values','syntactic.py',83),
  ('values -> TRUE','values',1,'p_values','syntactic.py',84),
  ('values -> FALSE','values',1,'p_values','syntactic.py',85),
  ('data_types -> INT32','data_types',1,'p_data_types','syntactic.py',88),
  ('data_types -> INT64','data_types',1,'p_data_types','syntactic.py',89),
  ('data_types -> FLOAT32','data_types',1,'p_data_types','syntactic.py',90),
  ('data_types -> FLOAT64','data_types',1,'p_data_types','syntactic.py',91),
  ('data_types -> BYTE','data_types',1,'p_data_types','syntactic.py',92),
  ('data_types -> WINT','data_types',1,'p_data_types','syntactic.py',93),
  ('data_types -> WFLOAT','data_types',1,'p_data_types','syntactic.py',94),
  ('data_types -> WSTRING','data_types',1,'p_data_types','syntactic.py',95),
  ('data_types -> BOOL','data_types',1,'p_data_types','syntactic.py',96),
  ('operations -> expression','operations',1,'p_operations','syntactic.py',99),
  ('operations -> comparison','operations',1,'p_operations','syntactic.py',100),
  ('operations -> logic_operation','operations',1,'p_operations','syntactic.py',101),
  ('data_structure -> array_var','data_structure',1,'p_data_structure','syntactic.py',104),
  ('data_structure -> map_var','data_structure',1,'p_data_structure','syntactic.py',105),
  ('var_asignation -> ID EQUAL any','var_asignation',3,'p_var_asignation','syntactic.py',108),
  ('any -> values','any',1,'p_var_asignation','syntactic.py',109),
  ('any -> operations','any',1,'p_var_asignation','syntactic.py',110),
  ('any -> ID','any',1,'p_var_asignation','syntactic.py',111),
  ('any -> data_structure','any',1,'p_var_asignation','syntactic.py',112),
  ('any -> funciones','any',1,'p_var_asignation','syntactic.py',113),
  ('arr_content -> LLLAVE items COMA more_items RLLAVE','arr_content',5,'p_arr_content','syntactic.py',116),
  ('arr_content -> LLLAVE items RLLAVE','arr_content',3,'p_arr_content','syntactic.py',117),
  ('more_items -> items COMA more_items','more_items',3,'p_arr_content','syntactic.py',119),
  ('more_items -> items','more_items',1,'p_arr_content','syntactic.py',120),
  ('items -> values','items',1,'p_arr_content','syntactic.py',122),
  ('items -> operations','items',1,'p_arr_content','syntactic.py',123),
  ('something -> ID','something',1,'p_something','syntactic.py',127),
  ('something -> data_structure','something',1,'p_something','syntactic.py',128),
  ('something -> values','something',1,'p_something','syntactic.py',129),
  ('something -> operations','something',1,'p_something','syntactic.py',130),
  ('main_func -> FUNC MAIN LPAREN RPAREN LLLAVE codigo RLLAVE','main_func',7,'p_main_func','syntactic.py',133),
  ('scan_func -> SCAN LPAREN POINTER RPAREN','scan_func',4,'p_scan_func','syntactic.py',136),
  ('cicloFor -> FOR LLLAVE codigo RLLAVE','cicloFor',4,'p_for','syntactic.py',142),
  ('cicloFor -> FOR comparison LLLAVE codigo RLLAVE','cicloFor',5,'p_for','syntactic.py',143),
  ('cicloFor -> FOR logic_operation LLLAVE codigo RLLAVE','cicloFor',5,'p_for','syntactic.py',144),
  ('cicloFor -> FOR decVarOne COLON comparison COLON incre LLLAVE codigo RLLAVE','cicloFor',9,'p_for','syntactic.py',145),
  ('incre -> ID INCREASE','incre',2,'p_for','syntactic.py',146),
  ('incre -> ID DECREASE','incre',2,'p_for','syntactic.py',147),
  ('decVar -> decVarOne','decVar',1,'p_decVar','syntactic.py',150),
  ('decVar -> VAR ID EQUAL INTEGER','decVar',4,'p_decVar','syntactic.py',151),
  ('decVar -> VAR ID EQUAL ID','decVar',4,'p_decVar','syntactic.py',152),
  ('decVar -> VAR ID EQUAL FLOAT','decVar',4,'p_decVar','syntactic.py',153),
  ('decVar -> VAR ID EQUAL expression','decVar',4,'p_decVar','syntactic.py',154),
  ('decVar -> VAR ID EQUAL logic_operation','decVar',4,'p_decVar','syntactic.py',155),
  ('decVar -> VAR ID EQUAL comparison','decVar',4,'p_decVar','syntactic.py',156),
  ('decVar -> VAR ID EQUAL STRING','decVar',4,'p_decVar','syntactic.py',157),
  ('decVar -> ID DEQUAL STRING','decVar',3,'p_decVar','syntactic.py',158),
  ('decVar -> ID DEQUAL FLOAT','decVar',3,'p_decVar','syntactic.py',159),
  ('decVar -> ID DEQUAL expression','decVar',3,'p_decVar','syntactic.py',160),
  ('decVar -> ID DEQUAL logic_operation','decVar',3,'p_decVar','syntactic.py',161),
  ('decVar -> ID DEQUAL comparison','decVar',3,'p_decVar','syntactic.py',162),
  ('slice_declaration -> VAR ID LCORCHE RCORCHE data_types','slice_declaration',5,'p_slice_declaration','syntactic.py',167),
  ('slice_declaration -> VAR ID EQUAL LCORCHE RCORCHE data_types arr_content','slice_declaration',7,'p_slice_declaration','syntactic.py',168),
  ('slice_declaration -> VAR ID EQUAL funM','slice_declaration',4,'p_slice_declaration','syntactic.py',169),
  ('slice_declaration -> ID DEQUAL funM','slice_declaration',3,'p_slice_declaration','syntactic.py',170),
  ('slice_declaration -> ID DEQUAL LCORCHE RCORCHE data_types arr_content','slice_declaration',6,'p_slice_declaration','syntactic.py',171),
  ('funM -> MAKE LPAREN LCORCHE RCORCHE data_types COMA cap RPAREN','funM',8,'p_slice_declaration','syntactic.py',174),
  ('funM -> MAKE LPAREN LCORCHE RCORCHE data_types COMA cap COMA cap RPAREN','funM',10,'p_slice_declaration','syntactic.py',175),
  ('cap -> INTEGER','cap',1,'p_slice_declaration','syntactic.py',177),
  ('cap -> ID','cap',1,'p_slice_declaration','syntactic.py',178),
  ('cap -> expression','cap',1,'p_slice_declaration','syntactic.py',179),
  ('slice_var -> ID LCORCHE index_s RCORCHE','slice_var',4,'p_slice_var','syntactic.py',182),
  ('index_s -> ID','index_s',1,'p_slice_var','syntactic.py',184),
  ('index_s -> INTEGER','index_s',1,'p_slice_var','syntactic.py',185),
  ('index_s -> expression','index_s',1,'p_slice_var','syntactic.py',186),
  ('slice_assignment -> slice_var EQUAL something_s','slice_assignment',3,'p_slice_assignment','syntactic.py',189),
  ('something_s -> ID','something_s',1,'p_slice_assignment','syntactic.py',191),
  ('something_s -> array_var','something_s',1,'p_slice_assignment','syntactic.py',192),
  ('something_s -> values','something_s',1,'p_slice_assignment','syntactic.py',193),
  ('something_s -> operations','something_s',1,'p_slice_assignment','syntactic.py',194),
  ('funciones -> APPEND LPAREN ID COMA values RPAREN','funciones',6,'p_funciones','syntactic.py',200),
  ('funciones -> APPEND LPAREN ID COMA ID RPAREN','funciones',6,'p_funciones','syntactic.py',201),
  ('funciones -> LEN LPAREN ID RPAREN','funciones',4,'p_funciones','syntactic.py',202),
  ('funciones -> COPY LPAREN ID COMA ID RPAREN','funciones',6,'p_funciones','syntactic.py',203),
  ('funciones -> DELETE LPAREN ID COMA ID RPAREN','funciones',6,'p_funciones','syntactic.py',204),
  ('decVarOne -> ID DEQUAL ID','decVarOne',3,'p_decVarOne','syntactic.py',207),
  ('decVarOne -> ID DEQUAL INTEGER','decVarOne',3,'p_decVarOne','syntactic.py',208),
  ('SenIF -> IF comparison LLLAVE codigo RLLAVE','SenIF',5,'p_if','syntactic.py',212),
  ('SenIF -> IF TRUE LLLAVE codigo RLLAVE','SenIF',5,'p_if','syntactic.py',213),
  ('SenIF -> IF FALSE LLLAVE codigo RLLAVE','SenIF',5,'p_if','syntactic.py',214),
  ('SenElseIF -> ELSE IF comparison LLLAVE codigo RLLAVE','SenElseIF',6,'p_elseif','syntactic.py',217),
  ('SenElseIF -> ELSE IF TRUE LLLAVE codigo RLLAVE','SenElseIF',6,'p_elseif','syntactic.py',218),
  ('SenElseIF -> ELSE IF FALSE LLLAVE codigo RLLAVE','SenElseIF',6,'p_elseif','syntactic.py',219),
  ('SenElse -> ELSE LLLAVE codigo RLLAVE','SenElse',4,'p_else','syntactic.py',222),
  ('SenStruct -> TYPE ID STRUCT LLLAVE declaration RLLAVE','SenStruct',6,'p_struct','syntactic.py',225),
  ('declaration -> variable data_types','declaration',2,'p_struct','syntactic.py',227),
  ('declaration -> declaration variable data_types','declaration',3,'p_struct','syntactic.py',228),
  ('variable -> ID','variable',1,'p_struct','syntactic.py',230),
  ('cStruct -> ID DEQUAL ID LLLAVE asignaciones RLLAVE','cStruct',6,'p_createStruct','syntactic.py',233),
  ('asignaciones -> ID POINTS valor','asignaciones',3,'p_createStruct','syntactic.py',235),
  ('asignaciones -> ID POINTS valor COMA asignaciones','asignaciones',5,'p_createStruct','syntactic.py',236),
  ('valor -> ID','valor',1,'p_createStruct','syntactic.py',238),
  ('valor -> INTEGER','valor',1,'p_createStruct','syntactic.py',239),
  ('valor -> TRUE','valor',1,'p_createStruct','syntactic.py',240),
  ('valor -> FALSE','valor',1,'p_createStruct','syntactic.py',241),
  ('comparison -> value op value','comparison',3,'p_comparison','syntactic.py',246),
  ('value -> ID','value',1,'p_comparison','syntactic.py',247),
  ('value -> expression','value',1,'p_comparison','syntactic.py',248),
  ('op -> GREATER','op',1,'p_comparison','syntactic.py',249),
  ('op -> SMALLER','op',1,'p_comparison','syntactic.py',250),
  ('op -> GREATER_OR_EQUAL','op',1,'p_comparison','syntactic.py',251),
  ('op -> SMALLER_OR_EQUAL','op',1,'p_comparison','syntactic.py',252),
  ('op -> EQUAL_COMPARE','op',1,'p_comparison','syntactic.py',253),
  ('op -> NOT_EQUAL','op',1,'p_comparison','syntactic.py',254),
  ('logic_operation -> logic_value logic_recu','logic_operation',2,'p_logic_operation','syntactic.py',259),
  ('logic_operation -> negation','logic_operation',1,'p_logic_operation','syntactic.py',260),
  ('logic_recu -> logic_op logic_value','logic_recu',2,'p_logic_operation','syntactic.py',262),
  ('logic_recu -> logic_op logic_value logic_recu','logic_recu',3,'p_logic_operation','syntactic.py',263),
  ('logic_value -> negation','logic_value',1,'p_logic_operation','syntactic.py',266),
  ('logic_value -> comparison','logic_value',1,'p_logic_operation','syntactic.py',267),
  ('logic_value -> ID','logic_value',1,'p_logic_operation','syntactic.py',268),
  ('negation -> NOT comparison','negation',2,'p_logic_operation','syntactic.py',270),
  ('negation -> NOT ID','negation',2,'p_logic_operation','syntactic.py',271),
  ('logic_op -> AND','logic_op',1,'p_logic_operation','syntactic.py',273),
  ('logic_op -> OR','logic_op',1,'p_logic_operation','syntactic.py',274),
  ('switch_statement -> SWITCH ID LLLAVE cases RLLAVE','switch_statement',5,'p_switch','syntactic.py',277),
  ('cases -> CASE values POINTS codigo','cases',4,'p_switch','syntactic.py',279),
  ('cases -> CASE values POINTS codigo more','cases',5,'p_switch','syntactic.py',280),
  ('more -> cases','more',1,'p_switch','syntactic.py',282),
  ('more -> DEFAULT POINTS codigo','more',3,'p_switch','syntactic.py',283),
  ('array_declaration -> VAR ID LCORCHE capacity RCORCHE data_types','array_declaration',6,'p_array_declaration','syntactic.py',286),
  ('array_declaration -> VAR ID EQUAL LCORCHE capacity RCORCHE data_types arr_content','array_declaration',8,'p_array_declaration','syntactic.py',287),
  ('capacity -> INTEGER','capacity',1,'p_array_declaration','syntactic.py',289),
  ('capacity -> ID','capacity',1,'p_array_declaration','syntactic.py',290),
  ('capacity -> expression','capacity',1,'p_array_declaration','syntactic.py',291),
  ('array_var -> ID LCORCHE index RCORCHE','array_var',4,'p_array_var','syntactic.py',294),
  ('index -> ID','index',1,'p_array_var','syntactic.py',296),
  ('index -> INTEGER','index',1,'p_array_var','syntactic.py',297),
  ('index -> expression','index',1,'p_array_var','syntactic.py',298),
  ('array_assignment -> array_var EQUAL something','array_assignment',3,'p_array_assignment','syntactic.py',301),
  ('map_declaration -> VAR ID LCORCHE data_types RCORCHE data_types','map_declaration',6,'p_map_declaration','syntactic.py',304),
  ('map_var -> ID LCORCHE key RCORCHE','map_var',4,'p_map_var','syntactic.py',307),
  ('key -> ID','key',1,'p_map_var','syntactic.py',308),
  ('key -> values','key',1,'p_map_var','syntactic.py',309),
  ('key -> operations','key',1,'p_map_var','syntactic.py',310),
  ('map_assignment -> array_var EQUAL something','map_assignment',3,'p_map_assignment','syntactic.py',313),
  ('func_declaration -> FUNC ID LPAREN params RPAREN data_types LLLAVE codigo RETURN retorno RLLAVE','func_declaration',11,'p_func_declaration','syntactic.py',316),
  ('func_declaration -> FUNC ID LPAREN params RPAREN data_types LLLAVE RETURN return_value RLLAVE','func_declaration',10,'p_func_declaration','syntactic.py',317),
  ('return_value -> retorno COLON','return_value',2,'p_func_declaration','syntactic.py',319),
  ('return_value -> retorno','return_value',1,'p_func_declaration','syntactic.py',320),
  ('retorno -> ID','retorno',1,'p_func_declaration','syntactic.py',322),
  ('retorno -> values','retorno',1,'p_func_declaration','syntactic.py',323),
  ('retorno -> operations','retorno',1,'p_func_declaration','syntactic.py',324),
  ('retorno -> data_structure','retorno',1,'p_func_declaration','syntactic.py',325),
  ('params -> ID data_types','params',2,'p_func_declaration','syntactic.py',327),
  ('params -> more_params','params',1,'p_func_declaration','syntactic.py',328),
  ('more_params -> ID data_types COMA params','more_params',4,'p_func_declaration','syntactic.py',330),
  ('impresion -> PRINT LPAREN content RPAREN','impresion',4,'p_impresion','syntactic.py',336),
  ('content -> values','content',1,'p_impresion','syntactic.py',337),
  ('content -> operations','content',1,'p_impresion','syntactic.py',338),
  ('content -> funciones','content',1,'p_impresion','syntactic.py',339),
  ('content -> data_structure','content',1,'p_impresion','syntactic.py',340),
  ('content -> ID','content',1,'p_impresion','syntactic.py',341),
  ('expression -> something_ex','expression',1,'p_expression','syntactic.py',346),
  ('expression -> something_ex adicionaEx','expression',2,'p_expression','syntactic.py',347),
  ('adicionaEx -> op something_ex','adicionaEx',2,'p_expression','syntactic.py',349),
  ('adicionaEx -> op something_ex adicionaEx','adicionaEx',3,'p_expression','syntactic.py',350),
  ('something_ex -> ID','something_ex',1,'p_expression','syntactic.py',352),
  ('something_ex -> INTEGER','something_ex',1,'p_expression','syntactic.py',353),
  ('something_ex -> FLOAT','something_ex',1,'p_expression','syntactic.py',354),
  ('something_ex -> data_structure','something_ex',1,'p_expression','syntactic.py',355),
  ('something_ex -> funciones','something_ex',1,'p_expression','syntactic.py',356),
  ('op -> PLUS','op',1,'p_expression','syntactic.py',358),
  ('op -> TIMES','op',1,'p_expression','syntactic.py',359),
  ('op -> DIVIDE','op',1,'p_expression','syntactic.py',360),
  ('op -> MINUS','op',1,'p_expression','syntactic.py',361),
]
